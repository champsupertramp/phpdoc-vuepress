## {{ class|trim('\\') }} <Badge v-if="'{{ class.deprecated }}'" text="deprecated" type="error"/> <Badge v-if="'{{ class.abstract }}'" text="abstract"/> <Badge v-if="'{{ class.final }}'" text="final" />

{{ class.summary|replace({'#### ': '- ', '### ': '- ', '## ': '- ', '# ': '- ',}) }}

{{ class.description|replace({'#### ': '- ', '### ': '- ', '## ': '- ', '# ': '- ',}) }}

{#- Class and parent interfaces -#}
{% set interfaces = [] %}
{#- Class and parent traits -#}
{% set traits = [] %}

{% macro getRecursiveInterfaces(targetClass) %}
  {%- import _self as self -%}

  {%- if targetClass -%}
    {%- for interface in targetClass.interfaces -%}
    {{- interface|trim('\\', 'left') -}},
    {%- endfor -%}

    {{- self.getRecursiveInterfaces(targetClass.parent) -}}

  {%- endif -%}
{% endmacro %}

{% macro getRecursiveTraits(targetClass, includeTraitsInTraits) %}
  {%- import _self as self -%}

  {%- if targetClass -%}
    {{- targetClass.usedTraits|join(',') -}},

    {{- self.getRecursiveTraits(targetClass.parent, includeTraitsInTraits) -}}

    {%- if includeTraitsInTraits -%}
      {%- for trait in targetClass.usedTraits -%}
        {{- self.getRecursiveTraits(trait, includeTraitsInTraits) -}}
      {%- endfor -%}
    {%- endif -%}

  {%- endif -%}
{% endmacro %}

{% import _self as self %}
{% set interfacesText = self.getRecursiveInterfaces(class) %}
{% set traitsText = self.getRecursiveTraits(class, false) %}

{#- Convert to array, sort and remove duplicates -#}
{% for name in interfacesText|trim(', ')|split(',')|sort %}
    {%- set interfaces = interfaces|merge({ (name): (name|split('\\')|last) }) -%}
{% endfor %}

{% for name in traitsText|trim(', ')|split(',')|sort %}
    {%- set traits = traits|merge({ (name): (name|split('\\')|last) }) -%}
{% endfor %}

| Name | {{ class.name }} |
| ----:|:---------------- |
{% if class.parent %}
 **Extends** | [{{ class.parent.namespace|trim('\\') -}}\\<span style="font-weight: bold;">{{ class.parent.name }}</span>](/api/classes.html#
  {{- class.parent|trim('\\')|lower|replace('\\', '-') }})
{% endif %}
{% for iname, ishort in interfaces if ishort is not empty %}
{% if loop.first -%}
**Implements** |
{%- endif -%}
 [{{ iname|trim('\\')|split('\\')|slice(0, -1)|join('\\') }}\\<span style="font-weight: bold;">{{ ishort }}</span>](/api/interfaces.html#{{ iname|lower|replace('\\', '-') }}) {{- '<br />' -}}
{% endfor %}

{% for tName, tShort in traits if tShort is not empty %}
{% if loop.first -%}
**Uses** |
{%- endif -%}
 [{{ tName|trim('\\')|split('\\')|slice(0, -1)|join('\\') }}\\<span style="font-weight: bold;">{{ tShort }}</span>](/api/traits.html#{{ tShort|lower|replace('\\', '-') }}) {{- '<br />' -}}
{% endfor %}

{% for author in class.tags.author %}
{% if loop.first %}- **Authors:**{% endif %}

  - {{ author.description }}
{%- endfor %}


{% if class.tags.see is not empty or class.tags.link is not empty %}
***See Also:***

{% for see in class.tags.see %}
* `{{ see.reference }}` {% if see.description %}-{% endif %} {{ see.description }}
{% endfor %}

{% for link in class.tags.link %}
* [{{ link.description|default(link.link) }}]({{ link.link }})
{% endfor %}

{% endif %}{# class.tags.see || class.tags.link #}

#### <span style="display: none;">{{ class }}</span> Methods:
{# Lista de métodos públicos y protegidos #}
{% for method in class.methods|sort_asc %}
{% if method.visibility != 'private' %}
{% include 'method.md.twig' %}
{% endif %}
{% endfor %}

#### <span style="display: none;">{{ class }}</span> Inherited methods:
{# Lista de métodos públicos y protegidos #}
{% for method in class.inheritedMethods -%}
  {%- if method.parent in project.indexes.classes %}
    {%- set parent_location = 'classes' %}
  {%- elseif method.parent in project.indexes.interfaces %}
    {%- set parent_location = 'interfaces' %}
  {%- else %}
    {%- set parent_location = 'traits' %}
  {%- endif %}

{%- if method.visibility != 'private' %}
- [{{ method.parent.namespace|trim('\\') -}}\\<span style="font-weight: bold;">{{ method.parent.name }}</span>](/api/{{ parent_location }}.html#
  {{- method.parent|trim('\\')|lower|replace('\\', '-') -}}
  )::
  {{- include('method-anchor-link.md.twig', { text: method.name ~ '()' }) }}
  <Badge v-if="'{{ method.deprecated }}'" text="deprecated" type="error"/> <Badge v-if="'{{ method.abstract }}'" text="abstract"/> <Badge v-if="'{{ method.final }}'" text="final" />
{% endif %}
{% endfor %}
