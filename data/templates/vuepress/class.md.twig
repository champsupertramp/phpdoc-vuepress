
### {{ class.name }} <Badge v-if="'{{ class.deprecated }}'" text="deprecated" type="error"/> <Badge v-if="'{{ class.abstract }}'" text="abstract"/> <Badge v-if="'{{ class.final }}'" text="final" /> <span style="display: none;">{{ class.FullyQualifiedStructuralElementName }}</span>
-----

{{ class.summary|replace({'#### ': '- ', '### ': '- ', '## ': '- ', '# ': '- ',}) }}

{{ class.description|replace({'#### ': '- ', '### ': '- ', '## ': '- ', '# ': '- ',}) }}

{#- Class and parent interfaces -#}
{% set interfaces = [] %}

{% macro getRecursiveInterfaces(targetClass) %}
  {%- import _self as self -%}

  {%- if targetClass -%}
    {%- for interface in targetClass.interfaces -%}
    {{- interface|trim('\\', 'left') -}},
    {%- endfor -%}

    {{- self.getRecursiveInterfaces(targetClass.parent) -}}

  {%- endif -%}
{% endmacro %}

{% import _self as self %}
{% set interfacesText = self.getRecursiveInterfaces(class) %}

{#- Convert to array, sort and remove duplicates -#}
{% for name in interfacesText|trim(', ')|split(',')|sort %}
    {%- set interfaces = interfaces|merge({ (name): (name|split('\\')|last) }) -%}
{% endfor %}

|     |     |
| ---:| --- |
**Full name** | **`{{ class|trim('\\', 'left') }}`**
{% if class.parent %}
 **Extends** | [{{ class.parent|trim('\\', 'left') }}](/api/classes.html#{{ class.parent.name|lower }}{{ class.parent|lower|replace('\\', '-') }})
{% endif %}
{% for iname, ishort in interfaces if ishort is not empty %}
{% if loop.first -%}
**Implements** |
{%- endif -%}
 [{{ iname }}](/api/interfaces.html#{{ ishort|lower }}-{{ iname|lower|replace('\\', '-') }}) {{- '<br />' -}}
{% endfor %}


{% for author in class.tags.author %}
{% if loop.first %}- **Authors:**{% endif %}

  - {{ author.description }}
{%- endfor %}


{% if class.tags.see is not empty or class.tags.link is not empty %}
***See Also:***

{% for see in class.tags.see %}
* `{{ see.reference }}` {% if see.description %}-{% endif %} {{ see.description }}
{% endfor %}

{% for link in class.tags.link %}
* [{{ link.description|default(link.link) }}]({{ link.link }})
{% endfor %}

{% endif %}{# class.tags.see || class.tags.link #}

#### <span style="display: none;">{{ class }}</span> Methods:
{# Lista de métodos públicos y protegidos #}
{% for method in class.methods|sort_asc %}
{% if method.visibility != 'private' %}
{% include 'method.md.twig' %}
{% endif %}
{% endfor %}

#### <span style="display: none;">{{ class }}</span> Inherited methods:
{# Lista de métodos públicos y protegidos #}
{% for method in class.inheritedMethods %}
{% if method.visibility != 'private' %}
- {{ method.parent|trim('\\') }}::{{ method.name }} <Badge v-if="'{{ method.deprecated }}'" text="deprecated" type="error"/> <Badge v-if="'{{ method.abstract }}'" text="abstract"/> <Badge v-if="'{{ method.final }}'" text="final" />
{% endif %}
{% endfor %}
